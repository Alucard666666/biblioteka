<?php

use Phalcon\Paginator\Adapter\Model as Paginator;

class IndexController extends ControllerBase
{

    public function initialize(){

        parent::initialize();
    }

    public function indexAction(){

    }

    public function pageAction()
	{
        /*$currentPage = (int) $this->dispatcher->getParam(0) > 1 ? (int) $this->dispatcher->getParam(0) : 1 ;

        $projects = Projects::find(array(
            "conditions" => "project_valid_until >= ?1",
            "bind" => array(1 => date("Y-m-d"))
        ));

        $paginator = new Paginator(array(
            "data" => $projects,
            "limit"=> $this->conf['index_limit'],
            "page" => $currentPage
        ));

        $this->view->projects = $paginator->getPaginate();
	}

	public function detailAction()
	{
        $this->view->setLayout('main2');

		$project = Projects::findFirst(
            array(
			    "project_link = :link:",
			    "bind" => array('link' => $this->dispatcher->getParam("link"))
		    )
        );

        if($this->request->isPost()){
            $this->addComment($project->project_id, $this->request->getPost("comment_reply_to_user_id"));
        }

		$this->view->project = $project;
	}

    private function addComment($project_id, $reply_id=NULL)
    {
        $comment = new Comments();

        $comment->comment_user_id = $this->session->get("user")["user_id"];
        $comment->comment_reply_to_user_id = $reply_id;
        $comment->comment_project_id = $project_id;

        $comment->assign($this->request->getPost());

        if ($comment->create())
            $this->flash->success("dodane");
        else
            $this->flash->error("Please fill comment field");

        unset($_POST);
    */}
}
